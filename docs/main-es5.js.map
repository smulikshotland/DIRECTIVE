{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/comps/c1/c1.component.ts","webpack:///src/app/comps/c1/c1.component.html","webpack:///src/app/comps/results/results.component.ts","webpack:///src/app/comps/results/results.component.html","webpack:///src/app/d/app-higclight.directive.ts","webpack:///src/app/d/showcase.directive.ts","webpack:///src/app/s/counter.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","arr","colorParam1","larr","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","C1Component","el","nativeElement","ResultsComponent","SVC","AppHigclightDirective","counterSVC","clickCounter","ShowcaseDirective","elRef","clickCountChnge","style","color","emit","clickd","CounterService","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0BI;;AAA6B;;AAAK;;;;;;AAAL;;AAAA;;;;QDnBpBC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,WAAR;AACA,WAAAC,GAAA,GAAK,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAL;AAGA,WAAAC,WAAA,GAAc,QAAd;AAEA,WAAAC,IAAA,GAAK,EAAL;AACD,K;;;uBARYJ,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,qV;AAAA;AAAA;ACAzB;;AACE;;AACA;AAAA,mBAAmB,IAAAI,IAAA,aAAnB;AAAoC,WAApC;;AACC;;AAAM;;AACP;;AAAI;;AAAI;;AACR;;AACA;AAAA,mBAAmB,IAAAA,IAAA,aAAnB;AAAoC,WAApC;;AACC;;AAAM;;AACP;;AAAI;;AAAI;;AACR;;AACA;AAAA,mBAAmB,IAAAA,IAAA,aAAnB;AAAoC,WAApC;;AACC;;AAAM;;AACP;;AAAI;;AAAI;;AACR;;AACA;AAAA,mBAAmB,IAAAA,IAAA,aAAnB;AAAoC,WAApC;;AACC;;AAAM;;AACT;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;;;AAbsC;;AAAA;;AAU7B;;AAAA;;;;;;;;;sEDnBIJ,Y,EAAY;cALxB,uDAKwB;eALd;AACTK,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAHJ,CACP,uEADO,CAGI;;;;0HAGFA,S,EAAS;AAAA,uBAZlB,2DAYkB,EAXlB,kEAWkB,EAVlB,gFAUkB,EATlB,iFASkB,EARlB,uEAQkB;AARD,kBAGjB,uEAHiB;AAQC,O;AALL,K;;;;;sEAKJA,S,EAAS;cAdrB,sDAcqB;eAdZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,kEAFY,EAGZ,gFAHY,EAIZ,iFAJY,EAKZ,uEALY,CADN;AAQRC,iBAAO,EAAE,CACP,uEADO,CARD;AAWRC,mBAAS,EAAE,EAXH;AAYRC,mBAAS,EAAE,CAAC,2DAAD;AAZH,S;AAcY,Q;;;;;;;;;;;;;;;;;;ACvBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEI;;AAA0C;;AAAK;;;;;;AAAL;;AAAA;;;;QDMjCC,W;AAGX,2BAAoBC,EAApB,EAAoC;AAAA;;AAAhB,aAAAA,EAAA,GAAAA,EAAA;AAFpB,aAAAZ,GAAA,GAAM,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAN;AAIEY,UAAE,CAACC,aAAH;AACA;;;;mCAGM,CACP;;;;;;;uBAVUF,W,EAAW,yH;AAAA,K;;;YAAXA,W;AAAW,6B;AAAA,c;AAAA,a;AAAA,uF;AAAA;AAAA;ACRxB;;AAAG;;AAAS;;AACZ;;AACI;;AACJ;;;;AADwB;;AAAA;;;;;;;;;sEDMXA,W,EAAW;cALvB,uDAKuB;eALb;AACTR,kBAAQ,EAAE,QADD;AAETC,qBAAW,EAAE,qBAFJ;AAGTC,mBAAS,EAAE,CAAC,oBAAD;AAHF,S;AAKa,Q;;;;;;;;;;;;;;;;;;;;;;AERxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaS,gB;AAEX,gCAAmBC,GAAnB,EAAuC;AAAA;;AAApB,aAAAA,GAAA,GAAAA,GAAA;AAAuB;;;;mCAElC,CAEP;;;;;;;uBANUD,gB,EAAgB,yI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA;AAAA;ACR7B;;AAAG;;AAAc;;AACjB;;AAAO;;AAA2B;;;;AAA3B;;AAAA;;;;;;;;sEDOMA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTX,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;AER7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaW,qB;AAEX,qCAAoBJ,EAApB,EAA4CK,UAA5C,EAAuE;AAAA;;AAAnD,aAAAL,EAAA,GAAAA,EAAA;AAAwB,aAAAK,UAAA,GAAAA,UAAA;AAA8B;;;;mCAE5C;AAC9B;AACC,eAAKA,UAAL,CAAgBC,YAAhB;AACA;;;;;;;uBAPUF,qB,EAAqB,yH,EAAA,kI;AAAA,K;;;YAArBA,qB;AAAqB,8C;AAAA;AAAA;;mBAArB,c;AAAU,W;;;;;;;sEAAVA,qB,EAAqB;cAHjC,uDAGiC;eAHvB;AACTb,kBAAQ,EAAE;AADD,S;AAGuB,Q;;;;;;;;gBAI/B,0D;iBAAa,O;;;;;;;;;;;;;;;;;;;;ACVhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKagB,iB;AAGX,iCAAYC,KAAZ,EAA8B;AAAA;;AAgBrB,aAAAC,eAAA,GAAkB,IAAI,0DAAJ,EAAlB;AAfN,aAAKT,EAAL,GAAUQ,KAAK,CAACP,aAAhB;AAED;;;;mCACM;AACN,eAAKD,EAAL,CAAQU,KAAR,CAAcC,KAAd,GAAqB,KAAKA,KAA1B;AACD;;;gCAI2B;AAC1B;AACA,eAAKF,eAAL,CAAqBG,IAArB,uBAAyC,KAAKD,KAA9C;AACA,eAAKE,MAAL,GAAc,CAAC,KAAKA,MAApB;AACD;;;;;;;uBAjBUN,iB,EAAiB,yH;AAAA,K;;;YAAjBA,iB;AAAiB,0C;AAAA,iB;AAAA;AAAA;;mBAAjB,W;AAAO,W;;;;;;;;;;;;;;;;;sEAAPA,iB,EAAiB;cAH7B,uDAG6B;eAHnB;AACThB,kBAAQ,EAAE;AADD,S;AAGmB,Q;;;;;;gBAW3B,mD;iBAAM,iB;;;gBAEN,0D;iBAAa,O;;;gBAMb;;;gBAEA,yD;iBAAY,c;;;;;;;;;;;;;;;;;;;;AC1Bf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKauB,c,GAEX,0BAAc;AAAA;;AAEd,WAAAR,YAAA,GAAqB,CAArB;AAFiB,K;;;uBAFNQ,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVC,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;ACL3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'DIRECTIVE';\n  arr =[1,2,3,4]\n\n\n  colorParam1 = 'violet'\n\n  larr=[]\n}\n\n\n","<!-- <app-c1 *ngFor=\"let n of arr\">{{n}}</app-c1>\n<br>\n<br>\n\n\n<br>\n<br> -->\n<div class=\"allButton\">\n  <button appAppHigclight appShowcase clickCountColor= 'red'\n  (clickCountChnge)=\"larr.push($event)\"\n  >click1</button>\n  <br><br><br>\n  <button appAppHigclight appShowcase clickCountColor= 'blue' \n  (clickCountChnge)=\"larr.push($event)\"\n  >click2</button>\n  <br><br><br>\n  <button appAppHigclight appShowcase [clickCountColor]='colorParam1'\n  (clickCountChnge)=\"larr.push($event)\"\n  >click3</button>\n  <br><br><br>\n  <button appAppHigclight appShowcase clickCountColor ='red'\n  (clickCountChnge)=\"larr.push($event)\"\n  >click4</button>\n</div>\n<div class=\"allLi\">\n  <ul>\n    <li  *ngFor= \"let l of larr\">{{l}}</li>\n  </ul>\n</div>\n<app-results></app-results>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { C1Component } from './comps/c1/c1.component';\nimport { AppHigclightDirective } from './d/app-higclight.directive';\nimport { ResultsComponent } from './comps/results/results.component';\nimport { ShowcaseDirective } from './d/showcase.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    C1Component,\n    AppHigclightDirective,\n    ResultsComponent,\n    ShowcaseDirective\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Element } from '@angular/compiler';\n\n@Component({\n  selector: 'app-c1',\n  templateUrl: './c1.component.html',\n  styleUrls: ['./c1.component.css']\n})\nexport class C1Component implements OnInit {\n  arr = [1,2,3,4]\n\n  constructor(private el: ElementRef) {\n\n    el.nativeElement\n   }\n  \n\n  ngOnInit(): void {\n  }\n\n}\n","<p>c1 works!</p>\n<ul>\n    <li appAppHigclight *ngFor=\"let n of arr\">{{n}}</li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { CounterService } from 'src/app/s/counter.service';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent implements OnInit {\n\n  constructor(public SVC:CounterService) { }\n\n  ngOnInit(): void {\n\n  }\n  \n}\n","<p>results works!</p>\n<label>click: {{SVC.clickCounter}}</label>\n","import { Directive, HostListener, ElementRef } from '@angular/core';\nimport { CounterService } from '../s/counter.service';\n\n@Directive({\n  selector: '[appAppHigclight]'\n})\nexport class AppHigclightDirective {\n\n  constructor(private el: ElementRef, private counterSVC:CounterService) { }\n\n  @HostListener('click')onClickd(){\n  //  this.el.nativeElement.style.backgroundColor = 'blue';\n   this.counterSVC.clickCounter++\n  }\n\n}\n","import { Directive, Input, ElementRef, OnInit, HostListener, Output, EventEmitter, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[appShowcase]'\n})\nexport class ShowcaseDirective implements OnInit {\n  el:HTMLElement\n\n  constructor(elRef:ElementRef) {\n     this.el = elRef.nativeElement\n     \n   }\n  ngOnInit(): void {\n    this.el.style.color= this.color\n  }\n\n  @Input('clickCountColor')color: string;\n\n  @HostListener('click') click(){\n    // alert(`my colot is ${this.color}`)\n    this.clickCountChnge.emit(`my colot is ${this.color} clickd`)\n    this.clickd = !this.clickd\n  }\n\n  @Output()clickCountChnge = new EventEmitter<string>();\n\n  @HostBinding('class.clickd') clickd: boolean\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CounterService {\n\n  constructor() { }\n\n  clickCounter:number =0\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}